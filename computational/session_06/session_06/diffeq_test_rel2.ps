%!PS-Adobe-2.0
%%Title: diffeq_test_rel2.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Thu Apr 13 02:19:23 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (diffeq_test_rel2.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (aj)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr 13 02:19:23 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
602 588 M
63 0 V
6282 0 R
-63 0 V
stroke
518 588 M
[ [(Helvetica) 140.0 0.0 true true 0 (-25)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 1394 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1394 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 2200 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2200 M
[ [(Helvetica) 140.0 0.0 true true 0 (-15)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3007 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3007 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3813 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3813 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 4619 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1658 588 M
0 63 V
0 3968 R
0 -63 V
stroke
1658 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2716 588 M
0 63 V
0 3968 R
0 -63 V
stroke
2716 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3773 588 M
0 63 V
0 3968 R
0 -63 V
stroke
3773 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4831 588 M
0 63 V
0 3968 R
0 -63 V
stroke
4831 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5889 588 M
0 63 V
0 3968 R
0 -63 V
stroke
5889 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 588 M
0 63 V
0 3968 R
0 -63 V
stroke
6947 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
602 4619 N
602 588 L
6345 0 V
0 4031 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 2603 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (log)]
[(Helvetica) 112.0 -42.0 true true 0 (10)]
[(Helvetica) 140.0 0.0 true true 0 (\(Relative Error\))]
] -32.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 238 M
[ [(Helvetica) 140.0 0.0 true true 0 (t)]
] -46.7 MCshow
LTb
LCb setrgbcolor
3774 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Comparing Differential Equation Algorithms)]
] -46.7 MCshow
LCb setrgbcolor
182 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Thu Apr 13 02:19:23 2017)]
] -46.7 MLshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
6296 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (Euler h=0.1)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 811 3765 Pls
1023 3876 Pls
1235 3940 Pls
1446 3984 Pls
1658 4016 Pls
1869 4040 Pls
2081 4058 Pls
2292 4070 Pls
2504 4078 Pls
2716 4081 Pls
2927 4080 Pls
3139 4072 Pls
3350 4058 Pls
3562 4033 Pls
3773 3992 Pls
3985 3916 Pls
4197 3700 Pls
4408 3839 Pls
4620 3998 Pls
4831 4085 Pls
5043 4148 Pls
5254 4197 Pls
5466 4239 Pls
5678 4275 Pls
5889 4306 Pls
6101 4335 Pls
6312 4360 Pls
6524 4383 Pls
6735 4405 Pls
6947 4424 Pls
6579 4486 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
6296 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (4th order Runge-Kutta h=0.1)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 1023 1021 Crs
1235 1249 Crs
1446 1366 Crs
1658 1417 Crs
1869 1307 Crs
2081 1514 Crs
2292 1752 Crs
2504 1910 Crs
2716 2035 Crs
2927 2142 Crs
3139 2236 Crs
3350 2321 Crs
3562 2398 Crs
3773 2469 Crs
3985 2535 Crs
4197 2597 Crs
4408 2655 Crs
4620 2709 Crs
4831 2761 Crs
5043 2810 Crs
5254 2857 Crs
5466 2902 Crs
5678 2944 Crs
5889 2985 Crs
6101 3025 Crs
6312 3063 Crs
6524 3099 Crs
6735 3135 Crs
6947 3169 Crs
6579 4346 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C LCb setrgbcolor
6296 4206 M
[ [(Helvetica) 140.0 0.0 true true 0 (Euler h=0.01)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C 621 3022 Star
642 3134 Star
663 3199 Star
685 3246 Star
706 3282 Star
727 3311 Star
748 3336 Star
769 3357 Star
790 3376 Star
811 3393 Star
833 3408 Star
854 3422 Star
875 3435 Star
896 3447 Star
917 3458 Star
938 3468 Star
960 3478 Star
981 3487 Star
1002 3495 Star
1023 3503 Star
1044 3511 Star
1065 3518 Star
1086 3525 Star
1108 3532 Star
1129 3538 Star
1150 3544 Star
1171 3550 Star
1192 3556 Star
1213 3561 Star
1235 3566 Star
1256 3571 Star
1277 3576 Star
1298 3580 Star
1319 3585 Star
1340 3589 Star
1362 3593 Star
1383 3597 Star
1404 3601 Star
1425 3605 Star
1446 3609 Star
1467 3612 Star
1488 3616 Star
1510 3619 Star
1531 3622 Star
1552 3625 Star
1573 3628 Star
1594 3631 Star
1615 3634 Star
1637 3637 Star
1658 3639 Star
1679 3642 Star
1700 3645 Star
1721 3647 Star
1742 3649 Star
1764 3652 Star
1785 3654 Star
1806 3656 Star
1827 3658 Star
1848 3660 Star
1869 3662 Star
1890 3664 Star
1912 3666 Star
1933 3668 Star
1954 3670 Star
1975 3672 Star
1996 3673 Star
2017 3675 Star
2039 3676 Star
2060 3678 Star
2081 3679 Star
2102 3681 Star
2123 3682 Star
2144 3683 Star
2166 3684 Star
2187 3686 Star
2208 3687 Star
2229 3688 Star
2250 3689 Star
2271 3690 Star
2292 3691 Star
2314 3692 Star
2335 3693 Star
2356 3694 Star
2377 3694 Star
2398 3695 Star
2419 3696 Star
2441 3696 Star
2462 3697 Star
2483 3697 Star
2504 3698 Star
2525 3698 Star
2546 3699 Star
2567 3699 Star
2589 3699 Star
2610 3700 Star
2631 3700 Star
2652 3700 Star
2673 3700 Star
2694 3700 Star
2716 3700 Star
2737 3700 Star
2758 3700 Star
2779 3700 Star
2800 3700 Star
2821 3700 Star
2843 3700 Star
2864 3699 Star
2885 3699 Star
2906 3698 Star
2927 3698 Star
2948 3697 Star
2969 3697 Star
2991 3696 Star
3012 3695 Star
3033 3695 Star
3054 3694 Star
3075 3693 Star
3096 3692 Star
3118 3691 Star
3139 3690 Star
3160 3689 Star
3181 3687 Star
3202 3686 Star
3223 3685 Star
3245 3683 Star
3266 3682 Star
3287 3680 Star
3308 3678 Star
3329 3677 Star
3350 3675 Star
3371 3673 Star
3393 3671 Star
3414 3668 Star
3435 3666 Star
3456 3664 Star
3477 3661 Star
3498 3658 Star
3520 3656 Star
3541 3653 Star
3562 3649 Star
3583 3646 Star
3604 3643 Star
3625 3639 Star
3646 3635 Star
3668 3631 Star
3689 3627 Star
3710 3623 Star
3731 3618 Star
3752 3613 Star
3773 3608 Star
3795 3602 Star
3816 3597 Star
3837 3590 Star
3858 3584 Star
3879 3577 Star
3900 3569 Star
3922 3561 Star
3943 3552 Star
3964 3543 Star
3985 3532 Star
4006 3521 Star
4027 3509 Star
4048 3495 Star
4070 3480 Star
4091 3463 Star
4112 3443 Star
4133 3421 Star
4154 3394 Star
4175 3361 Star
4197 3319 Star
4218 3260 Star
4239 3164 Star
4260 2879 Star
4281 3100 Star
4302 3232 Star
4324 3305 Star
4345 3356 Star
4366 3395 Star
4387 3427 Star
4408 3454 Star
4429 3477 Star
4450 3498 Star
4472 3517 Star
4493 3534 Star
4514 3549 Star
4535 3564 Star
4556 3577 Star
4577 3590 Star
4599 3602 Star
4620 3613 Star
4641 3623 Star
4662 3633 Star
4683 3643 Star
4704 3652 Star
4726 3661 Star
4747 3670 Star
4768 3678 Star
4789 3686 Star
4810 3693 Star
4831 3701 Star
4852 3708 Star
4874 3715 Star
4895 3721 Star
4916 3728 Star
4937 3734 Star
4958 3741 Star
4979 3747 Star
5001 3753 Star
5022 3758 Star
5043 3764 Star
5064 3769 Star
5085 3775 Star
5106 3780 Star
5127 3785 Star
5149 3790 Star
5170 3795 Star
5191 3800 Star
5212 3805 Star
5233 3810 Star
5254 3814 Star
5276 3819 Star
5297 3823 Star
5318 3828 Star
5339 3832 Star
5360 3836 Star
5381 3840 Star
5403 3845 Star
5424 3849 Star
5445 3853 Star
5466 3857 Star
5487 3861 Star
5508 3864 Star
5529 3868 Star
5551 3872 Star
5572 3876 Star
5593 3879 Star
5614 3883 Star
5635 3886 Star
5656 3890 Star
5678 3893 Star
5699 3897 Star
5720 3900 Star
5741 3904 Star
5762 3907 Star
5783 3910 Star
5805 3914 Star
5826 3917 Star
5847 3920 Star
5868 3923 Star
5889 3926 Star
5910 3929 Star
5931 3932 Star
5953 3935 Star
5974 3938 Star
5995 3941 Star
6016 3944 Star
6037 3947 Star
6058 3950 Star
6080 3953 Star
6101 3956 Star
6122 3959 Star
6143 3962 Star
6164 3964 Star
6185 3967 Star
6207 3970 Star
6228 3973 Star
6249 3975 Star
6270 3978 Star
6291 3981 Star
6312 3983 Star
6333 3986 Star
6355 3988 Star
6376 3991 Star
6397 3993 Star
6418 3996 Star
6439 3998 Star
6460 4001 Star
6482 4003 Star
6503 4006 Star
6524 4008 Star
6545 4011 Star
6566 4013 Star
6587 4015 Star
6608 4018 Star
6630 4020 Star
6651 4023 Star
6672 4025 Star
6693 4027 Star
6714 4029 Star
6735 4032 Star
6757 4034 Star
6778 4036 Star
6799 4038 Star
6820 4041 Star
6841 4043 Star
6862 4045 Star
6884 4047 Star
6905 4049 Star
6926 4051 Star
6947 4054 Star
6579 4206 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C LCb setrgbcolor
6296 4066 M
[ [(Helvetica) 140.0 0.0 true true 0 (4th order Runge-Kutta h=0.01)]
] -46.7 MRshow
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C 2631 981 Box
2927 1004 Box
2991 1009 Box
3033 1013 Box
3096 1019 Box
3181 1026 Box
3287 1036 Box
3371 1045 Box
3520 1060 Box
3541 1062 Box
3604 1069 Box
3625 1071 Box
3710 1081 Box
3731 1083 Box
3752 1085 Box
3816 1093 Box
3922 1105 Box
3943 1108 Box
4006 1115 Box
4027 1118 Box
4048 1121 Box
4070 1123 Box
4091 1126 Box
4112 1128 Box
4133 1131 Box
4154 1134 Box
4175 1137 Box
4218 1142 Box
4239 1145 Box
4260 1148 Box
4281 1150 Box
4302 1153 Box
4324 1156 Box
4387 1165 Box
4408 1168 Box
4429 1170 Box
4450 1173 Box
4472 1176 Box
4493 1179 Box
4514 1182 Box
4535 1185 Box
4556 1188 Box
4577 1191 Box
4599 1194 Box
4620 1197 Box
4641 1200 Box
4662 1204 Box
4683 1207 Box
4704 1210 Box
4726 1213 Box
4747 1216 Box
4768 1331 Box
4789 1222 Box
4810 1226 Box
4831 1341 Box
4852 1232 Box
4874 1347 Box
4895 1239 Box
4916 1242 Box
4937 1357 Box
4958 1248 Box
4979 1252 Box
5001 1255 Box
5022 1258 Box
5043 1262 Box
5064 1265 Box
5085 1380 Box
5106 1384 Box
5127 1276 Box
5149 1333 Box
5170 1337 Box
5191 1340 Box
5212 1344 Box
5233 1347 Box
5254 1351 Box
5276 1354 Box
5297 1358 Box
5318 1373 Box
5339 1376 Box
5360 1369 Box
5381 1372 Box
5403 1387 Box
5424 1391 Box
5445 1394 Box
5466 1398 Box
5487 1402 Box
5508 1406 Box
5529 1409 Box
5551 1413 Box
5572 1417 Box
5593 1421 Box
5614 1425 Box
5635 1428 Box
5656 1432 Box
5678 1446 Box
5699 1440 Box
5720 1444 Box
5741 1448 Box
5762 1452 Box
5783 1456 Box
5805 1460 Box
5826 1464 Box
5847 1468 Box
5868 1472 Box
5889 1476 Box
5910 1490 Box
5931 1484 Box
5953 1488 Box
5974 1492 Box
5995 1496 Box
6016 1500 Box
6037 1504 Box
6058 1508 Box
6080 1512 Box
6101 1517 Box
6122 1521 Box
6143 1525 Box
6164 1529 Box
6185 1534 Box
6207 1538 Box
6228 1531 Box
6249 1535 Box
6270 1540 Box
6291 1544 Box
6312 1559 Box
6333 1553 Box
6355 1557 Box
6376 1561 Box
6397 1566 Box
6418 1570 Box
6439 1575 Box
6460 1567 Box
6482 1584 Box
6503 1588 Box
6524 1593 Box
6545 1585 Box
6566 1590 Box
6587 1606 Box
6608 1599 Box
6630 1603 Box
6651 1608 Box
6672 1613 Box
6693 1604 Box
6714 1609 Box
6735 1614 Box
6757 1631 Box
6778 1636 Box
6799 1628 Box
6820 1645 Box
6841 1637 Box
6862 1642 Box
6884 1647 Box
6905 1652 Box
6926 1642 Box
6947 1647 Box
6579 4066 Box
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
602 4619 N
602 588 L
6345 0 V
0 4031 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
