'''
Created on Apr 30, 2017

@author: aj
'''
from matplotlib import animation as anim, pyplot as pp, cm
from matplotlib.widgets import Slider, Button, RadioButtons
from numpy import e, linspace, zeros, arange, meshgrid, array
from scipy.sparse import spdiags
import mpl_toolkits.mplot3d.axes3d as p3
from library import *
from heat_model import heat_model


m1 = heat_model([0,99])
m2 = heat_model([0,99,0,99])

fig, ax = pyplot.subplots()
pyplot.subplots_adjust(left = 0.25, bottom = 0.25)
axes = pyplot.axes(xlim=(x_min,x_max), ylim=(0,9))
axes.set_title("Finite Difference 1-D Heat Simulation")
axes.set_xlabel("x")
axes.set_ylabel("u(x,t)")
line, = axes.plot([],[],lw=5)
t_label = axes.text(0,1,'',transform=axes.transAxes)
ax_bc_xmin = pyplot.axes([0.25,0.1,0.65,0.03])
ax_bc_xmax = pyplot.axes([0.25,0.15,0.65,0.03])
bc_xmin = 0.
bc_xmax = 0.
bc_xmin_slider = Slider(ax_bc_xmin, 'Left Boundary Condition', 0.,10.,valinit=0.)
bc_xmax_slider = Slider(ax_bc_xmax, 'Right Boundary Condition', 0.,10.,valinit=0.)

steps = 1
ax_step = pyplot.axes([0.25,0.2,0.65,0.03])
step_slider = Slider(ax_step, 'Seconds per Step',0,1000,valinit=1)

def init():
	t_label.set_text('')
	line.set_data([],[])
	return line, t_label

def update(garbage):
	global time, u, u_1, bc_xmin, bc_xmax
	bc_xmin = bc_xmin_slider.val
	bc_xmax = bc_xmax_slider.val
	steps = step_slider.val
	time += dt
	bcs = [bc_xmin,bc_xmax]
	time_step_fd_1d(u, u_1, r, dims, bcs, steps)
	t_label.set_text('time = %.3f' % time)
	line.set_data(x,u)
	return line, t_label



anm = anim.FuncAnimation(fig, update , frames = int(t_max/dt), interval = 10, init_func = init, blit = True, repeat = False)
pyplot.show()
