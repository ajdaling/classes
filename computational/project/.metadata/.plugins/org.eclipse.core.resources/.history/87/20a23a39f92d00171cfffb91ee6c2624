'''
Created on Apr 30, 2017

@author: aj
'''
from matplotlib import animation as anim, pyplot, cm
from matplotlib.widgets import Slider, Button, RadioButtons
from numpy import e, linspace, zeros, arange, meshgrid, array
from scipy.sparse import spdiags
import mpl_toolkits.mplot3d.axes3d as p3
from library import *
from heat_model import heat_model


m1 = heat_model([0,99])
m2 = heat_model([0,99,0,99])

fig = pyplot.figure()

#ax2 = fig.add_subplot(222,projection='3d')

ax1 = fig.add_subplot(221)


line1, = ax1.plot([],[],lw=4)
#surf1 = ax2.plot_surface(m2.X,m2.Y,m2.u,rstride=1,cstride=1,cmap=cm.autumn,linewidth=1,antialiased=False)

pyplot.subplots_adjust(left = 0.25, bottom = 0.25)
# t_label = ax1.text(0,1,'',transform=axes.transAxes)
time = 0
steps = 1

def init():
# 	t_label.set_text('')
	line1.set_data([],[])
	return line1

def update(garbage):
	global time, u, u_1, bc_xmin, bc_xmax
	bc_xmin = bc_xmin_slider.val
	bc_xmax = bc_xmax_slider.val
	bc_ymin = bc_ymin_slider.val
	bc_ymax = bc_ymin_slider.val
	bcs2 = [bc_xmin,bc_xmax,bc_ymin,bc_ymax]
	steps = step_slider.val
	time += m1.dt
	bcs1 = [bc_xmin,bc_xmax]
	m1.time_step(0.5, bcs1, 1)
	m2.time_step(.2, bcs2, 1)
	t_label.set_text('time = %.3f' % time)
	line1.set_data(m1.x,m1.u)
	#ax2.clear()
	#surf1 = ax2.plot_surface(m2.X,m2.Y,m2.u,rstride=1,cstride=1,cmap=cm.autumn,linewidth=1,antialiased=False)

	return line, t_label



anm = anim.FuncAnimation(fig, update , frames = int(m1.t_max/m1.dt), interval = 10, init_func = init, blit = True, repeat = False)
pyplot.show()
