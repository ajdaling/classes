'''
Created on Apr 28, 2017

@author: aj
'''

from numpy import e, linspace, zeros, arange, meshgrid
from matplotlib import animation as anim, pyplot as pp, cm
from matplotlib.widgets import Slider, Button, RadioButtons
import mpl_toolkits.mplot3d.axes3d as p3


l = 10
x_min = 0
x_max = l  
y_min = 0
y_max = l
max_temp = 10.

num_points = l #number of x points
#initialize 1d array of points
x,dx = linspace(x_min,x_max,num_points,retstep = True)
y,dy = linspace(y_min,y_max,num_points,retstep = True)
X,Y = meshgrid(x,y)
t0 = 0
r = 0.4	#must be <0.5 for stability for FD
dt = r*(dx**2)
t_max = 200
time = t0

#u = zeros(num_points) #u(x,t)
#u_1 = zeros(num_points) #u(x,t-1)
u = zeros((num_points,num_points))
u_1 = zeros((num_points,num_points))

for i in range(x_min,x_max):
	for j in range(y_min,y_max):
		u_1[i,j] = float((i+j))/2.

#plot vars
fig = pp.figure()
#ax = fig.add_subplot(1,2,1,projection='3d')
ax = p3.Axes3D(fig)
ax.set_title('Finite Difference 2-D Heat Simulation')
ax.set_xlim3d([x_min,x_max])
ax.set_xlabel('x')
ax.set_ylim3d([y_min,y_max])
ax.set_ylabel('y')
ax.set_zlim3d([0.,max_temp])
ax.set_zlabel('u(x,y)')


pp.subplots_adjust(left = 0.25, bottom = 0.25)


ax_bc_xmin = pp.axes([0.25,0.1,0.65,0.03])
ax_bc_xmax = pp.axes([0.25,0.15,0.65,0.03])
bc_xmin = 0.
bc_xmax = 0.
bc_xmin_slider = Slider(ax_bc_xmin, 'Left Boundary Condition', 0.,10.,valinit=0.)
bc_xmax_slider = Slider(ax_bc_xmax, 'Right Boundary Condition', 0.,10.,valinit=0.)





#initialize initial conditions
def time_step(u,u_1,x_min,x_max):
		for i in range(1,x_max):
			for j in range(1,y_max):
				u[i,j] =  u_1[i,j]+r*( u_1[i,j-1] + u_1[i-1,j] - 4*u_1[i,j] + u_1[i+1,j] + u_1[i,j+1] )
		print(u)
		u[x_min] = bc_xmin
		u[x_max] = bc_xmax
		u_1[:] = u

def update():
	

surf = ax.plot_surface(X,Y,u,rstride=1,cstride=1,cmap=cm.autumn,linewidth=1,antialiased=False)

anm = anim.FuncAnimation(fig, update , frames = int(t_max/dt), interval = 10, , blit = False, repeat = False)
pp.show()


