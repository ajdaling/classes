/*
 * Game.cpp
 *
 *  Created on: Apr 10, 2017
 *      Author: aj
 */

#include "Game.h"
#include <fstream>
#include <assert.h>
#include <iostream>
#include <cstdlib>
#include <string>
using namespace std;
namespace caps {

Game::Game() {


}

Game::~Game() {
	// TODO Auto-generated destructor stub
}

void Game::startGame(){
	cout << "loading data" << endl;
	loadCaps();
}

void Game::loadCaps(){
	ifstream in;
	string country;
	string capital;
	in.open("capitals.csv");
	assert(in.is_open());
	while(getline(in,country)){
		getline(in,capital);
		caps_vec.push_back(make_pair(country,capital));
	}

}

void Game::prompt(){
	cout << "What is the capital of: ";
	string country;
	string capital;
	int score;
	//get random country
	int random_index = rand() % caps_vec.size();
	country = caps_vec[random_index].first;
	capital = caps_vec[random_index].second;
	//print country
	cout << country << endl;
	score = getAnswer(capital);
}

int Game::getScore(string country, string capital){
	cout << "The answer is: " << capital << endl; // TODO remove
	int score = 3;
	bool done = false;
	int cap_length = capital.length();
	string hint;
	string ans;

	while(!done && score > 0){
		cin >> ans;
		//check if user asked for hint
		if(ans.compare("hint") == 0){
			switch(score){
			case 3:
				cout << "one point deducted" << endl;
				score--;
				hint = capital.substr(0,int(cap_length/3));
				break;
			case 2:
				cout << "one point deducted" << endl;
				score--;
				hint = capital.substr(0,int(cap_length/2));
				break;
			case 1:
				cout << "One point deducted." << endl;
				score--;
				hint = capital.substr(0,int(cap_length-2));
				break;
			}
			cout << "Hint: " << hint << endl;
		} else if(ans.compare(capital) == 0){
			cout << "Correct! " << score << " points earned." << endl;
			done = true;
		} else{
			score--;
			if(score > 1){
				cout << "Incorrect. One point deducted." << endl;
				cout << score << " attempts remaining.";
			} else{
				cout << "Incorrect. The capital of " << country << " is " << capital << endl;
				cout << "0 points earned." << endl;
				done = true;
			}

		}
	}

}

} /* namespace caps */
